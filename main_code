/**
 * Given an integer numRows, return the first numRows of Pascal's triangle.
 *
 * @author S. Khan
 */
 
import java.util.ArrayList;
public class pascalTriangle
{
    public static ArrayList<ArrayList<Integer>> generate(int numRows)
    {
        ArrayList<ArrayList<Integer>> triangle = new ArrayList<>();

        if (numRows == 0) {
            return triangle;
        }

        ArrayList<Integer> firstRow = new ArrayList<>();
        firstRow.add(1);
        triangle.add(firstRow);

        for(int i = 1; i < numRows; i++) {
            ArrayList<Integer> prevRow = triangle.get(i-1);
            ArrayList<Integer> currentRow = new ArrayList<>();

            currentRow.add(1);

            for (int j = 1; j < i; j++) {
                currentRow.add(prevRow.get(j-1) + prevRow.get(j));
            }

            currentRow.add(1);

            triangle.add(currentRow);
        }
        System.out.println(triangle);
        return triangle;
    }            
}
